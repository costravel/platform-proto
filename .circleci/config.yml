version: 2

references:
  defaults: &defaults
    working_directory: ~/grpc-gen
    machine: true

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Lint
          command: docker-compose run --rm lint
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Clean up
          command: rm -rf ./*/pb-go
      - run:
          name: Generate gRPC for golang
          command: |
            DIC=`find . -maxdepth 1 -mindepth 1 -type d |grep -v "\/\." | sed 's!^.*/!!'`
            for DIR in $DIC
            do
              echo "export PROJECT=${DIR}" >> $BASH_ENV
              source $BASH_ENV
              echo $PROJECT
              docker-compose run --rm go
            done
      - run:
          name: Generate gRPC for java
          command: |
            DIC=`find . -maxdepth 1 -mindepth 1 -type d |grep -v "\/\." | sed 's!^.*/!!'`
            for DIR in $DIC
            do
              echo "export PROJECT=${DIR}" >> $BASH_ENV
              source $BASH_ENV
              echo $PROJECT
              docker-compose run --rm java
            done
      - persist_to_workspace:
          root: .
          paths:
            - .

  push:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: git config
          command: |
            git config user.email "circleci@costravel.net"
            git config user.name "CircleCI"
            git remote add upstream https://${GH_TOKEN}@github.com/costravel/platform-proto.git
      - run:
          name: git commit go-src
          command: |
            if [ `git branch -r --list origin/generated/go | wc -l` -eq 1 ]; then
              echo "checkout generated/go"
              git fetch origin
              git worktree add -b generated/go ../go-src origin/generated/go
              git -C ../go-src rm `git -C ../go-src ls-files`
            else
              echo "create generated/go"
              git worktree add --detach ../go-src
              git -C ../go-src checkout --orphan generated/go
              git -C ../go-src rm --cached -r .
              git -C ../go-src clean -d -f
            fi
            DIC=`find . -maxdepth 1 -mindepth 1 -type d |grep -v "\/\." | sed 's!^.*/!!'`
            for DIR in $DIC
            do
              echo $DIR
              cp -r ./$DIR/pb-go/ ../go-src/$DIR/
            done
            git -C ../go-src add -A
            git -C ../go-src status
            result=0
            git -C ../go-src commit -m "AUTO GENERATED [ci skip]" || result=$?
            if [ $result -eq 0 ]; then
              git -C ../go-src push upstream generated/go 2> /dev/null
            fi
      - run:
          name: git commit java-src
          command: |
            if [ `git branch -r --list origin/generated/java | wc -l` -eq 1 ]; then
              echo "checkout generated/java"
              git fetch origin
              git worktree add -b generated/java ../go-src origin/generated/java
              git -C ../java-src rm `git -C ../java-src ls-files`
            else
              echo "create generated/java"
              git worktree add --detach ../java-src
              git -C ../java-src checkout --orphan generated/java
              git -C ../java-src rm --cached -r .
              git -C ../java-src clean -d -f
            fi
            DIC=`find . -maxdepth 1 -mindepth 1 -type d |grep -v "\/\." | sed 's!^.*/!!'`
            for DIR in $DIC
            do
              echo $DIR
              cp -r ./$DIR/pb-java/ ../java-src/$DIR/
            done
            git -C ../java-src add -A
            git -C ../java-src status
            result=0
            git -C ../java-src commit -m "AUTO GENERATED [ci skip]" || result=$?
            if [ $result -eq 0 ]; then
              git -C ../java-src push upstream generated/java 2> /dev/null
            fi

workflows:
  version: 2
  build_and_push:
    jobs:
      - lint:
          filters:
            branches:
              ignore:
                - generated/go
      - build:
          requires:
            - lint
          filters:
            branches:
              only:
                - master
      - push:
          requires:
            - lint
            - build
          filters:
            branches:
              only:
                - master
